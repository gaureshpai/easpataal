name: Welcome Contributors

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]

jobs:
  greet-contributors:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Greet on New Issue
        uses: actions/github-script@v7
        if: github.event_name == 'issues'
        with:
          script: |
            const author = context.payload.issue.user.login;
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: author,
              state: 'all'
            });
            const isNewContributor = issues.length === 1;

            if (isNewContributor) {
              const body = `ðŸ‘‹ Hello @${{ github.actor }}!\n\nThank you for opening an issue. We appreciate your contribution and will review it as soon as possible.`;
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

      - name: Greet on New Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request_target'
        with:
          script: |
            const author = context.payload.pull_request.user.login;
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all'
            });
            const isNewContributor = pullRequests.filter(pr => pr.user.login === author).length === 1;

            if (isNewContributor) {
              const body = `ðŸŽ‰ Welcome, @${{ github.actor }}!\n\nThank you for submitting a Pull Request! We're thrilled to see your contribution. Our team will review it shortly.`;
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }